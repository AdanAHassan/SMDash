// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SMDashboardApi.Data;

#nullable disable

namespace SMDashboardApi.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20240125090656_InitialMigration")]
    partial class InitialMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("SMDashboardApi.Models.Client", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Clients");
                });

            modelBuilder.Entity("SMDashboardApi.Models.MetricProgress", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CurrentValue")
                        .HasColumnType("int");

                    b.Property<int>("Day")
                        .HasColumnType("int");

                    b.Property<int>("PlatformMetricId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PlatformMetricId");

                    b.ToTable("MetricProgressList");
                });

            modelBuilder.Entity("SMDashboardApi.Models.PlatformDataset", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ClientId")
                        .HasColumnType("int");

                    b.Property<int>("Platform")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ClientId");

                    b.ToTable("PlatformDatasets");
                });

            modelBuilder.Entity("SMDashboardApi.Models.PlatformMetric", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Metric")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PlatformDatasetId")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Target")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PlatformDatasetId");

                    b.ToTable("PlatformMetrics");
                });

            modelBuilder.Entity("SMDashboardApi.Models.MetricProgress", b =>
                {
                    b.HasOne("SMDashboardApi.Models.PlatformMetric", null)
                        .WithMany("ProgressList")
                        .HasForeignKey("PlatformMetricId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SMDashboardApi.Models.PlatformDataset", b =>
                {
                    b.HasOne("SMDashboardApi.Models.Client", null)
                        .WithMany("PlatformDatasets")
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SMDashboardApi.Models.PlatformMetric", b =>
                {
                    b.HasOne("SMDashboardApi.Models.PlatformDataset", null)
                        .WithMany("PlatformMetrics")
                        .HasForeignKey("PlatformDatasetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SMDashboardApi.Models.Client", b =>
                {
                    b.Navigation("PlatformDatasets");
                });

            modelBuilder.Entity("SMDashboardApi.Models.PlatformDataset", b =>
                {
                    b.Navigation("PlatformMetrics");
                });

            modelBuilder.Entity("SMDashboardApi.Models.PlatformMetric", b =>
                {
                    b.Navigation("ProgressList");
                });
#pragma warning restore 612, 618
        }
    }
}
